# Generated by roxygen2: do not edit by hand

export("%scale_between%")
export(He)
export(IUPAC)
export(MSA)
export(alignmentDT2coordDT)
export(alignmentDT2seqDT)
export(alnGetClumps)
export(alpha)
export(applyPalette)
export(argGiven)
export(argNotGiven)
export(blast)
export(blastDBexists)
export(ce)
export(clusterSeqs)
export(colDecToHex)
export(colHexToDec)
export(consensus)
export(consensusSeq)
export(d.t)
export(drawConsoleLine)
export(extractSeq)
export(filenameNopathNoext)
export(franktd)
export(getAlnCol)
export(getAlnvCol)
export(getFai)
export(gridApplyDT)
export(hasCol)
export(has_SeqId)
export(has_end)
export(has_fastaFname)
export(has_internal)
export(has_maxProductSize)
export(has_minProductSize)
export(has_minSize_maxSize)
export(has_name)
export(has_optimalSize)
export(has_qAlnSeq)
export(has_qFastaFname)
export(has_sAlnSeq)
export(has_sFastaFname)
export(has_score)
export(has_sqAlnSeqs)
export(has_start)
export(has_start_end)
export(has_strand)
export(interpolate)
export(isBehaved)
export(is_alignmentDT)
export(is_coordDT)
export(is_seqDT)
export(is_seqDT_with_seqFname)
export(is_seqListDT)
export(lastz)
export(ldtply)
export(makeFai)
export(makePalette)
export(makeValidator)
export(mostCommonThing)
export(nu)
export(null_plot)
export(palettePresets)
export(pd)
export(pmean2)
export(postpadChar)
export(prepadChar)
export(primer3)
export(printAln)
export(rc)
export(readBed)
export(readFai)
export(readFasta)
export(scale_between)
export(showPalettes)
export(sliceList)
export(swap)
export(tandemRepeatFinder)
export(vContainsWhitespace)
export(vIsBehaved)
export(vIsBehavedCommaSepInts)
export(vIsBehavedIntlikeFloat)
export(vIsBehavedPositive)
export(vIsBehavedPositiveIntlikeFloat)
export(vIsBehavedSimpleText)
export(vTrueFun)
export(varTableFromAlns)
export(wait)
export(writeBed)
export(writeFasta)
import(data.table)
import(magrittr)
importFrom(Biostrings,DNAStringSet)
importFrom(Rcpp,sourceCpp)
importFrom(msa,msa)
importFrom(plyr,l_ply)
importFrom(plyr,ldply)
importFrom(stringi,stri_length)
importFrom(stringi,stri_reverse)
importFrom(stringi,stri_trans_char)
useDynLib(BioDT, .registration = TRUE)
